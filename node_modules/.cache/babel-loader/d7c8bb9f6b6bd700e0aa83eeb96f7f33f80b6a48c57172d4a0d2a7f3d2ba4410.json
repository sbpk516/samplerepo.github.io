{"ast":null,"code":"var _jsxFileName = \"/Users/bsachi867/Documents/ground/freecodecamp_be/reactsetup1/greetings-app/src/MarkdownPreviewer.js\";\nimport React, { Component } from 'react';\nimport { marked } from 'marked';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MarkdownPreviewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: `\n# Welcome to my Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHere's some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg)\n`\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.setState({\n      input: event.target.value\n    });\n  }\n  renderMarkdown() {\n    return {\n      __html: marked(this.state.input)\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"editor\",\n        value: this.state.input,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"preview\",\n        dangerouslySetInnerHTML: this.renderMarkdown()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default MarkdownPreviewer;","map":{"version":3,"names":["React","Component","marked","jsxDEV","_jsxDEV","MarkdownPreviewer","constructor","props","state","input","handleChange","bind","event","setState","target","value","renderMarkdown","__html","render","className","children","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML"],"sources":["/Users/bsachi867/Documents/ground/freecodecamp_be/reactsetup1/greetings-app/src/MarkdownPreviewer.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { marked } from 'marked';\n\nclass MarkdownPreviewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: `\n# Welcome to my Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHere's some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg)\n`\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      input: event.target.value,\n    });\n  }\n\n  renderMarkdown() {\n    return { __html: marked(this.state.input) };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <textarea\n          id=\"editor\"\n          value={this.state.input}\n          onChange={this.handleChange}\n        ></textarea>\n        <div id=\"preview\" dangerouslySetInnerHTML={this.renderMarkdown()}></div>\n      </div>\n    );\n  }\n}\n\nexport default MarkdownPreviewer;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,iBAAiB,SAASJ,SAAS,CAAC;EACxCK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,CAAC;IAED,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EAEAD,YAAYA,CAACE,KAAK,EAAE;IAClB,IAAI,CAACC,QAAQ,CAAC;MACZJ,KAAK,EAAEG,KAAK,CAACE,MAAM,CAACC;IACtB,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAAA,EAAG;IACf,OAAO;MAAEC,MAAM,EAAEf,MAAM,CAAC,IAAI,CAACM,KAAK,CAACC,KAAK;IAAE,CAAC;EAC7C;EAEAS,MAAMA,CAAA,EAAG;IACP,oBACEd,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBhB,OAAA;QACEiB,EAAE,EAAC,QAAQ;QACXN,KAAK,EAAE,IAAI,CAACP,KAAK,CAACC,KAAM;QACxBa,QAAQ,EAAE,IAAI,CAACZ;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACZtB,OAAA;QAAKiB,EAAE,EAAC,SAAS;QAACM,uBAAuB,EAAE,IAAI,CAACX,cAAc,CAAC;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC;EAEV;AACF;AAEA,eAAerB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}